name: CI

on:
  push:
    branches:
      - main

jobs:
  build-web-app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install pipx
        run: |
          sudo apt-get update
          sudo apt-get install -y pipx
          pipx ensurepath
          export PATH=/root/.local/bin:$PATH
      - name: Install Pyenv and Python
        run: |
          curl https://pyenv.run | bash
          export PYENV_ROOT=~/.pyenv
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          pyenv install 3.11
      - name: Install Poetry and Poe
        run: |
          pipx install poetry
          pipx install poethepoet
      - name: Install Dependencies
        working-directory: ./web-app
        run: |
          poetry install

  build-twinkletaps-be:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install pipx
        run: |
          sudo apt-get update
          sudo apt-get install -y pipx
          pipx ensurepath
          export PATH=/root/.local/bin:$PATH
      - name: Install Pyenv and Python
        run: |
          curl https://pyenv.run | bash
          export PYENV_ROOT=~/.pyenv
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          pyenv install 3.12
      - name: Install Poetry and Poe
        run: |
          pipx install poetry
          poetry config virtualenvs.prefer-active-python true
          pipx install poethepoet
      - name: Install Dependencies
        working-directory: ./twinkletaps-be
        run: |
          eval "$(pyenv init -)"
          poetry config virtualenvs.prefer-active-python true
          poetry install
          poe manage migrate
          timeout_result_code=0
          timeout 10 poe manage runserver || timeout_result_code=$?
          if [ $timeout_result_code -ne 124 ]; echo "Server did not stay alive long enough - ${timeout_result_code}"; then exit 1; fi

  build-twinkletaps-ui:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: "Install nvm and npm"
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install 20
      - name: "Install dependencies"
        working-directory: ./twinkletaps-ui
        run: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use 20
          npm install
      - name: "Build"
        working-directory: ./twinkletaps-ui
        run: |
          npm run build
      - name: "Test E2E (built)"
        working-directory: ./twinkletaps-ui
        run: |
          npm run test:e2e
      - name: "Lint"
        working-directory: ./twinkletaps-ui
        run: |
          npm run gts:lint
