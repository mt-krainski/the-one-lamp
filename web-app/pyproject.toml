[tool.poetry]
name = "the_one_lamp_web_app"
version = "0.1.0"
description = "Web App to control the One Lamp"
authors = ["Mateusz Krainski <mateusz@krainski.eu>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = {extras = ["all"], version = "^0.103.2"}
redis = "^5.0.1"
asyncio = "^3.4.3"


[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
flake8 = "^6.1.0"
flake8-pyproject = "^1.2.3"
poethepoet = "^0.24.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length = 88

[tool.poe.tasks]
start = "uvicorn the_one_lamp_web_app.server:app --reload"
docker-redis-up = "docker compose up redis --build --detach"
docker-app-build = "docker build --tag one-lamp-app --build-arg 'POETRY_VERSION=1.6.1' ."
docker-app-up = "docker compose up app --build --detach"
docker-app-save = "docker save --output one-lamp-app.tar one-lamp-app"
docker-app-load = "docker load --input one-lamp-app.tar"
docker-up = "docker compose up --build --detach"

[tool.poe.tasks._ec2_instance_host]
shell = "terraform output --json | jq -r '.ec2_eip | .value'"
cwd = "./deployment/aws/prod"

[tool.poe.tasks.deploy]
help = "Build and deploy the app"
sequence = [
    "scp one-lamp-app.tar ubuntu@${EC2_INSTANCE_HOST}:.",
    "scp docker-compose.yml ubuntu@${EC2_INSTANCE_HOST}:.",
    "ssh ubuntu@${EC2_INSTANCE_HOST} docker load --input one-lamp-app.tar",
    "ssh ubuntu@${EC2_INSTANCE_HOST} docker compose down",
    "ssh ubuntu@${EC2_INSTANCE_HOST} docker compose up --detach",
]
default_item_type = "cmd"
deps = ["docker-app-build", "docker-app-save"]
uses = { EC2_INSTANCE_HOST = "_ec2_instance_host" }

[tool.poe.tasks.ssh-ec2]
help = "Print the command to SSH to the EC2 instance running the app"
uses = {EC2_INSTANCE_HOST = "_ec2_instance_host"}
cmd = "ssh ubuntu@${EC2_INSTANCE_HOST}"